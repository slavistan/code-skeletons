#!/usr/bin/env zsh

set -e

[ "$DEBUG" ] && alias logf=printf || logf() {}

usage() {
#TODO(feat): usage
  printf \
    "
"
}

[ "$1" = "-h" ] && usage && exit

if [ ! -d "$WERKWERKPATH" ]; then
  if [ -d /usr/local/share/werkwerk ]; then
    WERKWERKPATH=/usr/local/share/werkwerk;
  elif [ -d /usr/share/werkwerk ]; then
    WERKWERKPATH=/usr/share/werkwerk
  fi
fi
if [ ! -d "$WERKWERKPATH" ]; then
  # TODO(fix): Clarify usage and parsing of WERKWERKPATH
  echo "\$WERKWERKPATH='$WERKWERKPATH' is not a directory."
  exit 1
fi
logf "WERKWERKPATH=$WERKWERKPATH"

module=$(\
  # TODO(perf): use -print '%p' instead of -exec basename
  for subdir in $(find "$WERKWERKPATH" -maxdepth 1 -mindepth 1 -type d -not -name '\.git' -exec basename {} \;); do
    sf="$WERKWERKPATH/$subdir/_setup.sh"
    if [ -f "$sf" ] && grep -q '^# ' "$sf"; then
      printf "$subdir|"
      grep '^# .*$' "$sf" | head -1 | sed -E 's/^# +//g'
    fi
  done | column -t -s '|' | dmenu -l 10 -p "Setup which template?:" | cut -d ' ' -f 1)
[ -z "$module" ] && exit

outdir=$(mktemp -d -t werkwerk-$module-XXXXXX)
logf "outdir = $outdir\n"

# copy template files (omit _setup.sh)
find "$WERKWERKPATH/$module" -mindepth 1 -maxdepth 1 -not -name _setup.sh -exec cp -r {} "$outdir" \;

# workspace setup
cd "$outdir"
"$WERKWERKPATH/$module/_setup.sh"

# TODO(feat): zparseopts for --init-only, --where=...
# TODO(feat): Option to --list all modules (show long description from second comment paragraph)
# TODO(feat): Exclude all hidden files, not only .git (Don't forget Makefile)
# TODO(feat): pandoc md -> options
# TODO(feat): Include setup in compile.sh where possible
